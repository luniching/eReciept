// Terminal color codes.

var slice = Array.prototype.slice;

var term = module.exports = {
	RESET: '\x1b[0m',
	BRIGHT: "\x1b[1m",
	DIM: "\x1b[2m",
	UNDERSCORE: "\x1b[4m",
	BLINK: "\x1b[5m",
	REVERSE: "\x1b[7m",
	HIDDEN: "\x1b[8m",
	BLACK: '\x1b[30m',
	RED: '\x1b[31m',
	GREEN: '\x1b[32m',
	YELLOW: '\x1b[33m',
	BLUE: '\x1b[34m',
	MAGENTA: '\x1b[35m',
	CYAN: '\x1b[36m',
	WHITE: '\x1b[37m',
	BOLDBLACK: '\x1b[1m\x1b[30m',
	BOLDRED: '\x1b[1m\x1b[31m',
	BOLDGREEN: '\x1b[1m\x1b[32m',
	BOLDYELLOW: '\x1b[1m\x1b[33m',
	BOLDBLUE: '\x1b[1m\x1b[34m',
	BOLDMAGENTA: '\x1b[1m\x1b[35m',
	BOLDCYAN: '\x1b[1m\x1b[36m',
	BOLDWHITE: '\x1b[1m\x1b[37m',

	println: function(color) {
		if (color && String(color).indexOf('\x1b[') === 0) {
			var args = slice.apply(arguments);
			args.shift();
			println(color, args);
			return;
		}
		console.log.apply(null, arguments);
	},

	log: function() {
		console.log.apply(null, arguments);
	},

	ok: function () {
		println(this.BOLDGREEN, slice.apply(arguments));
	},

	info: function() {
		println(this.CYAN, slice.apply(arguments));
	},

	warn: function() {
		println(this.YELLOW, slice.apply(arguments));
	},

	error: function() {
		println(this.BOLDRED, slice.apply(arguments));
	},

	exit: function(err) {
		var code = 0;
		if (err) {
			term.error(err.message);
			code = 1;
		}
		term.log();
		process.exit(code);
	}
};

function println(color, args) {
	args[0] = '%swebcore %s' + (args[0] || '') + '%s';
	args.splice(1, 0, color);
	args.splice(1, 0, term.WHITE);
	args.push(term.RESET);
	console.log.apply(null, args);
}
