var fs = require('fs'),
    os = require('os'),
	util = require('util'),
	fsutil = require('../fsutil'),
	term = require('./term');

module.exports = {
	isEmpty: isEmpty,
	mkdir: mkdir,
	read: read,
	write: write,
	copy: copy,
	copydir: copydir,
	eol: os.EOL
};


/**
 * Determines if a directory is empty or not and invokes the provided callback
 * with an argument that is true if empty, or false if not. 
 * @param {String} dir the directory to check for emptiness
 * @param {Function} callback the callback invoked with a boolean indicating the emptimess of the directory
 */
function isEmpty(dir, callback) {
	fsutil.isempty(dir, function(err, empty) {
		if (err) { return term.exit(err); }
		callback(empty);
	});
}


/**
 * Creates a directory with the appropriate permissions.
 * @param {String} dir the directory to be created
 * @param {Function} fn the callback to invoke when the specified directory is created
 */
function mkdir(dir, fn) {
	fsutil.mkdir(dir, function(err) {
		if (err) { return term.exit(err); }
		term.info('create %s %s', term.RESET, dir);
		fn && fn(dir);
	});
}


/**
 * Returns the contents of the file at the specified path.
 * @param {String} path the file path to read
 */
function read(path) {
	return fs.readFileSync(path, 'utf8');
}


/**
 * Writes a string to the specified file path
 * @param {String} path the file path to be written to
 * @param {String} str the contents to write to the specified file
 */
function write(path, str) {
	fs.writeFile(path, str);
	term.info(' write %s %s', term.RESET, path);
}


/**
 * Copies the file src to dest
 * @param {String} src the source file to copy
 * @param {String} dest the destination file to be written
 * @param {Function} fn the callback to be called when the copy is complete
 */
function copy(src, dest, fn) {
	fsutil.copy(src, dest, function(err) {
		term.info('  copy %s %s', term.RESET, dest);
		fn && fn(err);
	});
}

/**
 * 
 * @param src
 * @param dest
 * @param fn
 */
function copydir(src, dest, fn) {
	fsutil.copydir(src, dest, function(err) {
		term.info('  copy %s %s', term.RESET, dest);
		fn && fn(err);
	});
}
