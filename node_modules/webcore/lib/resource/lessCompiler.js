var path = require('path'),
	util = require('util'),
	less = require('less'),
	Compiler = require('./compiler');

// Node 0.6.x and 0.8.x compatiable path separator detection.
path.sep || (path.sep = ('win32' === process.platform) ? '\\' : '/');

/**
 * Less CSS Compiling File Processor
 */
var LessCompiler = module.exports = function(src, dest, next) {
	Compiler.apply(this, [src, dest, /(\.(?:le|c)?(ss))$/ig, '.css', next]);
};

util.inherits(LessCompiler, Compiler);

/**
 * Returns `false` if any segment of the given path begins with an underscore.
 */
function shouldProcess(file) {
	return file.split(path.sep).every(function (part) {
		return part[0] !== '_';
	});
}

LessCompiler.prototype._process = function (file, callback) {
	if (shouldProcess(file)) {
		return Compiler.prototype._process.apply(this, [file, callback]);
	}

	callback();
};

LessCompiler.prototype._compile = function(name, content, callback) {
	try {
		less.render(content, { paths: [this._src + '/css'] }, callback);
	} catch (err) {
		callback(err);
	}
};
