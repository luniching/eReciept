{
  "name": "confer",
  "description": "Locate and parse JSON files",
  "version": "0.0.1",
  "author": {
    "name": "Brett Stimmerman",
    "email": "brettstimmerman@gmail.com"
  },
  "homepage": "https://github.com/brettstimmerman/confer",
  "keywords": [
    "find",
    "locate",
    "parse",
    "JSON",
    "file"
  ],
  "license": "MIT",
  "respository": {
    "type": "git",
    "url": "https://github.com/brettstimmerman/confer.git"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "dependencies": {
    "json-compressor": "~0.0.1",
    "parents": "~0.0.1"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "main": "index",
  "scripts": {
    "test": "mocha -R spec"
  },
  "readme": "# confer\n\nLocate and parse a JSON file.\n\nConfer begins its search in the specified directory or `process.cwd()`. If a\nfile is not found, confer then walks up the directory tree one level at a time\nuntil a file is found. If confer has not found a file after the walk, it will\nlook for a file in `$HOME`.\n\n## Installation\n\n``` bash\nnpm install confer\n```\n\n## Usage\n\n``` js\nvar config = require('confer')('config.json') || {};\n```\n\n## API\n\n### confer(file, [dir])\n\nLocate and parse a JSON file. Returns a JSON object or `false` if a file was not\nfound.\n\n* `file` {string} filename or path\n* `dir` {string} (optional) directory to begin from; default is `process.cwd()`\n\nIf `file` is a path then confer will parse the given file directly, bypassing\nthe locate step.\n\n### confer.locateFile(file, [dir])\n\nLocate a file by walking up the directory tree. Returns a file path or `false`\nif a file was not found.\n\n* `file` {string} filename\n* `dir` {string} (optional) directory to begin from; default is `process.cwd()`\n\n## Tests\n\n``` bash\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "_id": "confer@0.0.1",
  "dist": {
    "shasum": "c372669263edf8100194ced7ee459516f615170a"
  },
  "_from": "confer@0.0.x"
}
