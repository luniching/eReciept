'use strict';

var fs = require('fs'),
    util = require('util'),
    tater = require('tater');

var missing = '☃%s☃';

var proto = {

    tags: 'pre',


    onTag: function (def, callback) {
        var that, bundle;

        that = this;
        bundle = this._bundle;

        if (this._content) {
            this._readValue(def.attributes.key, callback);
            return;
        }

        if (!bundle) {
            callback(null, util.format(missing, def.attributes.key));
            return;
        }

        tater.deserialize(fs.createReadStream(bundle), 'properties', function (err, content) {
            if (err) {
                callback(err);
                return;
            }
            that._content = content;
            that.onTag(def, callback);
        });
    },


    _readValue: function (key, callback) {
        var namespace, value;

        namespace = key.split('.');
        value = this._content;

        while (value && namespace.length) {
            value = value[namespace.shift()];
        }

        if (typeof value !== 'string') {
            value = util.format(missing, key);
        }

        callback(null, String(value));
    }

};


exports.create = function (bundle) {
    return Object.create(proto, {
        _bundle: {
            value: bundle
        },
        _content: {
            writable: true,
            value: undefined
        }
    });
};