{
  "name": "webcore",
  "description": "Basic pre-configured node.js web application stack.",
  "version": "0.1.3",
  "homepage": "https://github.paypal.com/CoreUIE/node-webcore",
  "author": {
    "name": "Core UIE",
    "email": "DL-PP-UIE-CoreTeam@paypal.com"
  },
  "contributors": [
    {
      "name": "Erik Toth",
      "email": "ertoth@paypal.com"
    },
    {
      "name": "Jeff Harrell",
      "email": "jeharrell@paypal.com"
    },
    {
      "name": "Brett Stimmerman",
      "email": "bstimmerman@paypal.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.paypal.com/CoreUIE/node-webcore.git"
  },
  "main": "index",
  "bin": {
    "webcore": "./bin/webcore"
  },
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "commander": "0.6.x",
    "dustjs-linkedin": "1.0.x",
    "less": "1.3.x",
    "semver": "1.0.x",
    "mkdirp": "0.3.x",
    "async": "0.1.x",
    "nconf": "0.6.x",
    "requirejs": "2.0.x",
    "jshint": "0.7.x",
    "confer": "0.0.x"
  },
  "devDependencies": {
    "should": "*",
    "mocha": "*"
  },
  "engines": {
    "node": "0.8.x"
  },
  "readme": "# node-webcore\n\nEasily get started developing a node-based web application. Use node-webcore\nto generate a pre-configured application in a location you specify.\n\nnode-webcore is powered by the following libraries:\n- express (http://expressjs.com/)\n- nconf (https://github.com/flatiron/nconf#readme)\n- dustjs (http://akdubya.github.com/dustjs/, https://github.com/linkedin/dustjs#readme)\n- less (http://lesscss.org/)\n- async (https://github.com/caolan/async/#readme)\n\n\n## Getting Started\n\nTo create and run a barebones webcore-based application, install node-webcore\nand use it to create a new application. Then install the application's\ndependencies.\n\n``` bash\n\t$ [sudo] npm install -g git://github.paypal.com/CoreUIE/node-webcore.git#v0.1.3\n\t$ webcore create <dir>\n\t$ cd <dir> && npm install\n```\n\nThen, start the new application:\n\n``` bash\n\t$ npm start\n```\n\nNow browse to `http://localhost:8000/` to view the application.\n\n\n## Tests\n\nTODO\n\n## Routes\n\nRoutes are specified in controllers which are located in the `mvc/controllers`\ndirectory. A controller must export a `route` method that accepts the server as\nits only argument. Any middleware pertaining to this controller should be\ndefined in the same file. Get more information on routes and middleware at\nhttp://expressjs.com/guide.html#route-middleware.\n\n``` js\nexports = module.exports = function(server) {\n\n\t/**\n\t * The route that services the path '/foo'\n\t * @param {Object} req the HTTP request object\n\t * @param {Object} res the HTTP response object\n\t */\n\tserver.get('/foo', function(req, res) {\n\t\tres.send('Hello, world');\n\t});\n\n\t// ...\n\n};\n```\n\n## Resources\n\nStatic resources (JavaScript, CSS/LESS, Dust templates, images, etc.) reside in\n`public/{js,css,templates,img}`, and are acessible directly like\n`http://localhost:8000/js/main.js`.\n\nAt development-time, `.less` files are compiled on-the-fly and immediately\navailable using the `.css` extension.\n\nIf there are `.less` files that you do not want automatically compiled, begin\nthe filename or a sub-directory name with an underscore\n(e.g., `_include/stuff.less` or `_things.less`);\n\nTODO: Complete\n\n## Configuration\n### Setting the environment\n\nTo set the runtime environment (e.g., 'development', 'staging', 'production'),\nspecify a `NODE_ENV` environment variable before starting the application.\n\n``` bash\n$ export NODE_ENV=production \n$ npm start\n```\n\nTODO: Complete\n\n## Developing\n\nThe following information is only useful if you wish to contribute directly to\nnode-webcore.\n\nFork & clone the git repo, then `npm link` it. `npm link` installs development\ndependencies, adds the `webcore` module to the global `node_modules`\ndirectory, and adds the `webcore` binary to your path. Any changes made to your\nlocal repo are automatically reflected in both places.\n\n``` bash\n# First, fork from https://github.paypal.com/CoreUIE/node-webcore. Then:\n$ git clone git://github.paypal.com/<YOU>/node-webcore.git\n$ cd node-webcore\n$ npm link\n```\n\n### Test Applications\n\nIf you generate a test application during development, the setup process is\nslightly different. You should `npm link webcore` before `npm install`. This\nensures your application is using your local repo rather than cloning webcore\nfrom GitHub. This way, any changes you make to your local webcore repo will\nappear automatically in your test app.\n\n``` bash\n$ webcore create <dir>\n$ cd <dir>\n$ npm link webcore # Important!\n$ npm install\n$ npm start\n```\n",
  "readmeFilename": "README.md",
  "_id": "webcore@0.1.3",
  "dist": {
    "shasum": "1dc78c5b77ca980e1b024533fe42ee60f1f52291"
  },
  "_from": "webcore@git://github.paypal.com/CoreUIE/node-webcore.git#v0.1.3"
}
